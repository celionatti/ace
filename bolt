#!/usr/bin/env php
<?php

declare(strict_types=1);

/**
 * =======================================
 * ***************************************
 * ============= BOLT CLI ================
 * ***************************************
 * =======================================
 */

// Make sure we're running in CLI mode
if (php_sapi_name() !== 'cli') {
    exit('This script must be run from the command line.');
}

define('BASE_PATH', __DIR__);

require BASE_PATH . '/vendor/autoload.php';
require __DIR__ . '/ace/functions.php';

// Import required classes
use Dotenv\Dotenv;
use Ace\ace\Container\Container;
use Ace\ace\Exception\AceException;
use Ace\ace\Config\Config;
use Ace\ace\Database\Database;
use Ace\ace\Command\CommandRunner;
use Ace\ace\Command\TermUI;
use Ace\ace\Database\Schema\Schema;
use Ace\ace\Command\Commands\HelloCommand;
use Ace\ace\Command\Commands\ModelCommand;
use Ace\ace\Command\Commands\ViewCommand;
use Ace\ace\Command\Commands\ControllerCommand;
use Ace\ace\Command\Commands\ComponentCommand;


$dotenv = Dotenv::createImmutable(BASE_PATH);
$dotenv->load();
$container = new Container();

// Register the Config singleton and load the database configuration.
$container->singleton(Config::class, fn() => new Config());

loadConfiguration($container);

// Register the Database singleton.
$container->singleton(Database::class, function () use ($container) {
    $config = $container->get(Config::class);
    // of the array returned in your database.php file.
    if (!Database::init($config->get('database.default'), $config->get('database.connections.mysql'))) {
        throw new AceException("Failed to initialize database connection");
    }
    return new Database($config->get('database.default'), $config->get('database.connections.mysql'));
});

function loadConfiguration($container): void
{
    $config = $container->get(Config::class);
    $config->loadMultiple([
        config_path("database.php")
    ]);
}

Schema::setConnection($container->get(Database::class));

$header = <<<EOT
╔═══════════════════════════════╗
║                               ║
║    Welcome to Bolt CLI        ║
║                               ║
╚═══════════════════════════════╝
EOT;

echo TermUI::CYAN . TermUI::BOLD . $header . TermUI::RESET . PHP_EOL . PHP_EOL;

// Create the command runner
$runner = new CommandRunner('BOLT CLI', '1.0.0');

// Register commands manually
$runner->register(new HelloCommand());
$runner->register(new ModelCommand());
$runner->register(new ViewCommand());
$runner->register(new ComponentCommand());
$runner->register(new ControllerCommand());

// Discover commands in a directory
// $runner->discover(__DIR__ . '/ace/Command/Commands', 'Ace\\ace\\Command\\Commands');

// Run the command
exit($runner->run());